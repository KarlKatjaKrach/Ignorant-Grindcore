{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/js/seo.js","webpack:///./src/components/js/icon.js","webpack:///./src/components/js/header.js","webpack:///./src/components/js/main.js","webpack:///./src/components/js/footer.js","webpack:///./src/components/js/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_js_layout__WEBPACK_IMPORTED_MODULE_2__","_components_js_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Icon","react_default","gatsby_browser_entry","gatsby_image_default","fluid","placeholderImage","childImageSharp","_3902368039","Header","siteTitle","className","classNames","icon","Main","Footer","Date","getFullYear","href","Layout","Fragment","js_header","js_main","js_footer","_755544856","node"],"mappings":"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","file":"component---src-pages-page-2-js-c9217aa47e8d719abf04.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/js/layout\"\r\nimport SEO from \"../components/js/seo\"\r\n\r\nconst SecondPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Page two\" />\r\n    <h1>Hi from the second page</h1>\r\n    <p>Welcome to page 2</p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default SecondPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: 'website',\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `StaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `StaticQuery`: https://gatsby.dev/staticquery\r\n */\r\n\r\nconst Icon = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        placeholderImage: file(relativePath: { eq: \"Pantoffelkrebs.png\" }) {\r\n          childImageSharp {\r\n            fluid(maxWidth: 300) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\r\n  />\r\n)\r\nexport default Icon\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport classNames from \"classnames\"\r\nimport Icon from \"./icon\"\r\n\r\nimport \"../css/layout.css\"\r\nimport \"../css/header.css\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header className={classNames( 'siteContrast' )}>\r\n    <div className={classNames( 'siteWidth', 'headerWidth' )}>\r\n      <Link className={classNames( 'icon' )} to='/' >\r\n        <Icon />\r\n      </Link>\r\n      <div className={classNames( 'column', 'maxW' )}>\r\n        <div className={classNames( 'row' )}>\r\n          <div className={classNames( 'flex' )} />\r\n          <div className={classNames( 'column' )}>\r\n            <div className={classNames( 'flex' )} />\r\n            <h className={classNames( 'siteTitle' )}>\r\n              <Link className={classNames( 'light' )} to=\"/\">\r\n                {siteTitle}\r\n              </Link>\r\n            </h>\r\n            <div className={classNames( 'flex' )} />\r\n          </div>\r\n          <div className={classNames( 'flex' )} />\r\n          <h className={classNames( 'siteDescription', 'light' )}>\r\n            Der Blog von Karl-Katja Krach\r\n          </h>\r\n          <div className={classNames( 'flex' )} />\r\n        </div>\r\n        <div className={classNames( 'row', 'menuRow' )}>\r\n          <h className={classNames( 'menuEntry', 'light' )}>\r\n            Blog\r\n          </h>\r\n          <h className={classNames( 'menuEntry', 'light' )}>\r\n            Lesen\r\n          </h>\r\n          <h className={classNames( 'menuEntry', 'light' )}>\r\n            Hören\r\n          </h>\r\n          <h className={classNames( 'menuEntry', 'light' )}>\r\n            Leistungen\r\n          </h>\r\n          <h className={classNames( 'menuEntry', 'light', 'about' )}>\r\n            K.-K. Krach\r\n          </h>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: '',\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport classNames from \"classnames\"\r\n\r\nimport \"../css/main.css\"\r\n\r\nconst Main = ({ children }) => (\r\n  <main className={classNames( 'siteWidth' )}>\r\n    {children}\r\n  </main>\r\n)\r\n\r\nexport default Main\r\n","import React from \"react\"\r\nimport classNames from \"classnames\"\r\n\r\nimport \"../css/layout.css\"\r\nimport \"../css/footer.css\"\r\n\r\nconst Footer = () => (\r\n  <footer className={classNames( 'siteContrast' )}>\r\n    <div className={classNames( 'siteWidth', 'footerWidth', 'light')}>\r\n      © {new Date().getFullYear()}, Built with\r\n      {' '}\r\n      <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport \"../css/index.css\"\r\nimport \"../css/layout.css\"\r\nimport Header from \"./header\"\r\nimport Main from \"./main\"\r\nimport Footer from \"./footer\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <Main>\r\n          {children}\r\n        </Main>\r\n        <Footer />\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}